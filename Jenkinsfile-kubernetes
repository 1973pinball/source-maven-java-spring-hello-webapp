pipeline {
  agent {
    kubernetes {
      yamlFile 'pods.yaml'
    }
  }
  stages {
    stage('Checkout') {
      steps {
        container('maven') {
          git branch: 'main', url: 'https://github.com/1973pinball/source-maven-java-spring-hello-webapp.git'
        }
      }
    }
    stage('Build') {
      steps {
        container('maven') {
          sh 'mvn clean package -DskipTests=true'
        }
      }
    }
    stage('Test') {
      steps {
        container('maven') {
          sh 'mvn test'
        }
      }
    }
    stage('Build & Tag & Push Docker Image') {
      steps {
        container('kaniko') {
          sh 'executor --context=dir:///home/jenkins/agent/workspace/kube_pipeline/ \
                       --destination=1973pinball/myhello:$BUILD_NUMBER \
                       --destination=1973pinball/muhello:latest'
        }
      }
    }
    stage('Update K8s Manifests & Push') {
      environment {
        githubUser = '1973pinball' //Ryan Jang
        githubEmail = 'grpa82@gmail.com' //c1t1d0s7@example.com
        githubId = '1973pinball' //c1t1d0s7 
        githubRepo = 'argocd-k8s' //jenkins-kube-deploy
        githubURL = "https://github.com/${githubId}/${githubRepo}.git"
        dockerhubId = '1973pinball' //c1t1d0s7
        dockerhubRepo = 'myhello' //hello-world
      }
      steps {
        container('git') {
          git branch: 'main', credentialsId: 'github-credential', url: "${githubURL}"
          sh "git config --global --add safe.directory ${workspace}"
          sh "git config --global user.name ${githubUser}"
          sh "git config --global user.email ${githubEmail}"
          sh 'sed -i "s/image:.*/image: ${dockerhubId}\\/${dockerhubRepo}:${BUILD_NUMBER}/g" deployment.yaml'
          sh 'git add deployment.yaml'
          sh 'git commit -m "Jenkins Build Number - ${BUILD_NUMBER}"'
          withCredentials([gitUsernamePassword(credentialsId: 'github-credential', gitToolName: 'Default')]) {
            sh 'git push --set-upstream origin main'
          }
        }
      }
    }
  }
}
